openapi: 3.0.1
info:
    title: ISBNdb API v2
    description: |-
        Definition of ISBNdb.com API v2.

        If you are a **PREMIUM** subscriber you are entitled to **3 requests per second limit**. To access this benefit use the following [ Base URL: api.premium.isbndb.com ]
        *Please note that the above is only available for **PREMIUM** subscribers. Attempting to use your API key if you are in a different subscription plan will result in access being denied.*

        If you are a **PRO** subscriber you are entitled to **5 requests per second limit**. To access this benefit use the following [ Base URL: api.pro.isbndb.com ]
        *Please note that the above is only available for **PRO** subscribers. Attempting to use your API key if you are in a different subscription plan will result in access being denied.*
    version: 2.6.0
servers:
    - url: 'https://api2.isbndb.com/'
      description: Base
    - url: 'https://api.premium.isbndb.com/'
      description: Premium
    - url: 'https://api.pro.isbndb.com/'
      description: Pro
paths:
    '/author/{name}':
        get:
            tags:
                - Author
            summary: Gets author details
            description: Returns the name and a list of books by the author.
            parameters:
                - name: name
                  in: path
                  description: The name of an author in the Author's database
                  required: true
                  schema:
                      type: string
                - name: page
                  in: query
                  description: 'The number of page to retrieve, please note the API will not return more than 10,000 results no matter how you paginate them'
                  schema:
                      type: integer
                      default: 1
                - name: pageSize
                  in: query
                  description: 'How many items should be returned per page, maximum of 1,000'
                  schema:
                      type: integer
                      default: 20
                - name: language
                  in: query
                  description: 'Language code to filter books by language (e.g., ''en'' for English, ''fr'' for French, etc.)'
                  schema:
                      type: string
            responses:
                '200':
                    description: The author name was found in the database
                    headers:
                        Access-Control-Allow-Origin:
                            description: CORS Header to allow different origin responses
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Author'
                '404':
                    description: Author not found
                    content: {}
            security:
                - lambda_token: []
    '/authors/{query}':
        get:
            tags:
                - Author
            summary: Search authors
            description: This returns a list of authors whos name matches the given query
            parameters:
                - name: pageSize
                  in: query
                  description: 'How many items should be returned per page, maximum of 1,000'
                  schema:
                      type: string
                - name: query
                  in: path
                  description: A string to search for in the Authorâ€™s database
                  required: true
                  schema:
                      type: string
                - name: page
                  in: query
                  description: 'The number of page to retrieve, please note the API will not return more than 10,000 results no matter how you paginate them'
                  schema:
                      type: string
            responses:
                '200':
                    description: The query string found results in the author's database
                    headers:
                        Access-Control-Allow-Origin:
                            description: CORS Header to allow different origin responses
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AuthorQueryResults'
                '404':
                    description: There are no results in the author's database for the given query
                    content: {}
            security:
                - lambda_token: []
    '/book/{isbn}':
        get:
            tags:
                - Book
            summary: Gets book details
            description: |-
                Returns the book details

                __A 404 Not Found response for an ISBN lookup typically indicates that the book information is not yet available in our database. However, due to frequent updates, there is a high probability that the data will be added shortly, often within a minute or up to 24 hours. We recommend trying your request again after a while, as the information may soon become accessible__.
            parameters:
                - name: isbn
                  in: path
                  description: an ISBN 10 or ISBN 13 in the Books database
                  required: true
                  schema:
                      type: string
                - name: with_prices
                  in: query
                  description: indicate if shows Real Time Prices. Only with the Pro plan
                  schema:
                      type: string
                      enum:
                          - '1'
                          - '0'
            responses:
                '200':
                    description: The book ISBN was found in the database
                    headers:
                        Access-Control-Allow-Origin:
                            description: CORS Header to allow different origin responses
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    book:
                                        $ref: '#/components/schemas/Book'
                '404':
                    description: Book not found
                    content: {}
            security:
                - lambda_token: []
    /books:
        post:
            tags:
                - Book
            summary: Search books
            description: |-
                This method returns a list of books that match the query and is available on all plans. The endpoint has no pagination but comes with the following limits based on your plan:<ul><li>Academic: Up to 10 ISBN numbers per request.</li><li>Basic: Up to 100 ISBN numbers per request.</li><li>Pro and Premium: Up to 1,000 ISBN numbers per request.</li></ul> If you send 100 ISBN numbers you will get information back for all 100 books in the response provided the ISBNs do exist in the ISBNdb Database. ISBN Numbers not found in the ISBNdb database will not be part of the response. There is a limit of up to 6MB response size, if the limit is exceeded you will get a 500 error reply.

                __This endpoint does not return pricing information.__
            requestBody:
                content:
                    application/json:
                        schema:
                            required:
                                - isbns
                            type: object
                            properties:
                                isbns:
                                    type: array
                                    description: a list of ISBN 10 or ISBN 13 in the Books database
                                    items:
                                        type: string
                    multipart/form-data:
                        schema:
                            required:
                                - isbns
                            type: object
                            properties:
                                isbns:
                                    type: array
                                    description: a list of ISBN 10 or ISBN 13 in the Books database
                                    items:
                                        type: string
                required: true
            responses:
                '200':
                    description: The query string found results in the book's database
                    headers:
                        Access-Control-Allow-Origin:
                            description: CORS Header to allow different origin responses
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    total:
                                        type: integer
                                        x-stoplight:
                                            id: 9737lh32229k3
                                    requested:
                                        type: integer
                                        x-stoplight:
                                            id: 82ezlwzxmgde5
                                    data:
                                        type: array
                                        x-stoplight:
                                            id: vsk5k0hfe5bx5
                                        items:
                                            $ref: '#/components/schemas/Book'
            security:
                - lambda_token: []
    '/books/{query}':
        get:
            tags:
                - Book
            summary: Search books
            description: |-
                This returns a list of books that match the query.

                **This endpoint does not return pricing information.**
            parameters:
                - name: query
                  in: path
                  description: A string to search for in the Bookâ€™s database
                  required: true
                  schema:
                      type: string
                - name: page
                  in: query
                  description: 'The number of page to retrieve, please note the API will not return more than 10,000 results no matter how you paginate them'
                  schema:
                      type: integer
                      default: 1
                - name: pageSize
                  in: query
                  description: 'How many items should be returned per page, maximum of 1,000'
                  schema:
                      type: integer
                      default: 20
                - name: column
                  in: query
                  description: |-
                      Search limited to this column:
                       * `` - Empty value search in every column
                       * `title` - Only searches in Books Title
                       * `author` - Only searches books by the given Author
                       * `date_published` - Only searches books in a given year, e.g. 1998
                       * `subjects` - Only searches books by the given subject, e.g. physics
                  schema:
                      type: string
                      enum:
                          - ''
                          - title
                          - author
                          - date_published
                          - subjects
                - name: year
                  in: query
                  description: Filter books by year of publication
                  schema:
                      type: integer
                - name: edition
                  in: query
                  description: Filter books by edition
                  schema:
                      type: integer
                - name: language
                  in: query
                  description: 'Language code to filter books by language (e.g., ''en'' for English, ''fr'' for French, etc.)'
                  schema:
                      type: string
                - name: shouldMatchAll
                  in: query
                  description: 'An integer (1 or 0). If set to 1, the API will return books where the title or author exactly contains all the words entered by the user.'
                  schema:
                      type: integer
                      default: 0
            responses:
                '200':
                    description: The query string found results in the books's database
                    headers:
                        Access-Control-Allow-Origin:
                            description: CORS Header to allow different origin responses
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    total:
                                        type: integer
                                        x-stoplight:
                                            id: aadvo68om08om
                                    books:
                                        x-stoplight:
                                            id: ji5vyhrt8z9se
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Book'
                '404':
                    description: There are no results in the book's database for the given query
                    content: {}
            security:
                - lambda_token: []
    '/publisher/{name}':
        get:
            tags:
                - Publisher
            summary: Gets publisher details
            description: Returns details and a list of books by the publisher.
            parameters:
                - name: name
                  in: path
                  description: The name of a publisher in the Publisher's database
                  required: true
                  schema:
                      type: string
                - name: page
                  in: query
                  description: 'The number of page to retrieve, please note the API will not return more than 10,000 results no matter how you paginate them'
                  schema:
                      type: integer
                      default: 1
                - name: pageSize
                  in: query
                  description: 'How many items should be returned per page, maximum of 1,000'
                  schema:
                      type: integer
                      default: 20
                - name: language
                  in: query
                  description: 'Language code to filter books by language (e.g., ''en'' for English, ''fr'' for French, etc.)'
                  schema:
                      type: string
            responses:
                '200':
                    description: The publisher name was found in the database
                    headers:
                        Access-Control-Allow-Origin:
                            description: CORS Header to allow different origin responses
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Publisher'
                '404':
                    description: Publisher not found
                    content: {}
            security:
                - lambda_token: []
    '/publishers/{query}':
        get:
            tags:
                - Publisher
            summary: Search publishers
            description: This returns a list of publishers that match the given query
            parameters:
                - name: pageSize
                  in: query
                  description: 'How many items should be returned per page, maximum of 1,000'
                  schema:
                      type: string
                - name: query
                  in: path
                  description: A string to search for in the Publisherâ€™s database
                  required: true
                  schema:
                      type: string
                - name: page
                  in: query
                  description: 'The number of page to retrieve, please note the API will not return more than 10,000 results no matter how you paginate them'
                  schema:
                      type: string
            responses:
                '200':
                    description: The query string found results in the publisher's database
                    headers:
                        Access-Control-Allow-Origin:
                            description: CORS Header to allow different origin responses
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    total:
                                        type: integer
                                        x-stoplight:
                                            id: hfecrd2rrn2wf
                                    publishers:
                                        type: array
                                        x-stoplight:
                                            id: hc21sp3w66ojk
                                        items:
                                            x-stoplight:
                                                id: 630jqqpv61rjc
                                            type: string
                '404':
                    description: No results found.
                    content: {}
            security:
                - lambda_token: []
    '/search/{index}':
        get:
            tags:
                - Search
            summary: Search all ISBNDB databases
            description: Uses a determined index and query string to search in any of the ISBNDB's databases
            parameters:
                - name: index
                  in: path
                  description: 'Only this values are valids: subjects, publishers, authors y books'
                  required: true
                  schema:
                      type: string
                      enum:
                          - subjects
                          - publishers
                          - authors
                          - books
                - name: page
                  in: query
                  description: 'The number of page to retrieve, please note the API will not return more than 10,000 results no matter how you paginate them'
                  schema:
                      type: string
                - name: pageSize
                  in: query
                  description: 'How many items should be returned per page, maximum of 1,000'
                  schema:
                      type: string
                - name: isbn
                  in: query
                  description: an ISBN 10 in the Books database
                  schema:
                      type: string
                - name: isbn13
                  in: query
                  description: an ISBN 13 in the Books database
                  schema:
                      type: string
                - name: author
                  in: query
                  description: The name of an author in the Author's database
                  schema:
                      type: string
                - name: text
                  in: query
                  description: A string to search for determinated index database
                  schema:
                      type: string
                - name: subject
                  in: query
                  description: A subject in the Subject's database
                  schema:
                      type: string
                - name: publisher
                  in: query
                  description: The name of a publisher in the Publisher's database
                  schema:
                      type: string
            responses:
                '200':
                    description: Results were found in the requested database
                    headers:
                        Access-Control-Allow-Origin:
                            description: CORS Header to allow different origin responses
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    total:
                                        type: integer
                                    data:
                                        type: array
                                        description: 'Note: When the *index* parameter is set to **books**, the data field in the response will contain an array of **Book** objects. For all other values of index, the data field will contain an array of **strings**.'
                                        items:
                                            oneOf:
                                                - type: string
                                                - $ref: '#/components/schemas/Book'
                '404':
                    description: No results found in the requested database
                    content: {}
            security:
                - lambda_token: []
    /stats:
        get:
            tags:
                - Stats
            summary: Gets status on the ISBNDB Database
            description: Returns a status object about the ISBNDB database.
            responses:
                '200':
                    description: Stats on the ISBNDB sucessfully retrieved
                    headers:
                        Access-Control-Allow-Origin:
                            description: CORS Header to allow different origin responses
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    books:
                                        type: integer
                                    authors:
                                        type: integer
                                    publishers:
                                        type: integer
                                    subjects:
                                        type: integer
                                x-examples:
                                    Example 1:
                                        books: 53584920
                                        authors: 15259331
                                        publishers: 1850282
                                        subjects: 4391865
            security:
                - lambda_token: []
    '/subject/{name}':
        get:
            tags:
                - Subject
            summary: Gets subject details
            description: Returns details and a list of books with subject.
            parameters:
                - name: name
                  in: path
                  description: A subject in the Subject's database
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: The subject was found in the database
                    headers:
                        Access-Control-Allow-Origin:
                            description: CORS Header to allow different origin responses
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Subject'
                '404':
                    description: Subject not found
                    content: {}
            security:
                - lambda_token: []
    '/subjects/{query}':
        get:
            tags:
                - Subject
            summary: Search subjects
            description: This returns a list of subjects that match the given query
            parameters:
                - name: pageSize
                  in: query
                  description: 'How many items should be returned per page, maximum of 1,000'
                  schema:
                      type: string
                - name: query
                  in: path
                  description: A string to search for in the Subjectâ€™s database
                  required: true
                  schema:
                      type: string
                - name: page
                  in: query
                  description: 'The number of page to retrieve, please note the API will not return more than 10,000 results no matter how you paginate them'
                  schema:
                      type: string
            responses:
                '200':
                    description: The query string found results in the subject's database
                    headers:
                        Access-Control-Allow-Origin:
                            description: CORS Header to allow different origin responses
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    total:
                                        type: integer
                                    subjects:
                                        type: array
                                        items:
                                            type: string
                                x-examples:
                                    Example 1:
                                        total: 373
                                        subjects:
                                            - Test
                                            - test
                                            - Frieling Test
                                            - Turing test
                                            - Giessen Test
                '404':
                    description: There are no results in the subject's database for the given query
                    content: {}
            security:
                - lambda_token: []
components:
    schemas:
        AuthorQueryResults:
            type: object
            properties:
                total:
                    type: integer
                authors:
                    type: array
                    items:
                        type: string
            description: Describes the results of a query in the author's database
        Book:
            type: object
            description: Describes a book in the book's database
            properties:
                title:
                    type: string
                title_long:
                    type: string
                isbn:
                    type: string
                isbn13:
                    type: string
                dewey_decimal:
                    type: array
                    items: {}
                binding:
                    type: string
                publisher:
                    type: string
                language:
                    type: string
                    description: Language in ISO-639 format
                    example: en
                date_published:
                    type: string
                    format: date
                edition:
                    type: string
                pages:
                    type: integer
                dimensions:
                    type: string
                dimensions_structured:
                    type: object
                    description: Structured information about the book's dimensions.
                    properties:
                        length:
                            type: object
                            properties:
                                unit:
                                    type: string
                                value:
                                    type: number
                        width:
                            type: object
                            properties:
                                unit:
                                    type: string
                                value:
                                    type: number
                        height:
                            type: object
                            properties:
                                unit:
                                    type: string
                                value:
                                    type: number
                        weight:
                            type: object
                            properties:
                                unit:
                                    type: string
                                value:
                                    type: number
                overview:
                    type: string
                image:
                    $ref: '#/components/schemas/CoverLink'
                image_original:
                    $ref: '#/components/schemas/CoverLinkOriginal'
                msrp:
                    type: number
                excerpt:
                    type: string
                synopsis:
                    type: string
                authors:
                    type: array
                    items:
                        type: string
                subjects:
                    type: array
                    items:
                        type: string
                reviews:
                    type: array
                    items:
                        type: string
                prices:
                    type: array
                    description: Only shows if the query param 'with_prices' is present.
                    items:
                        $ref: '#/components/schemas/Merchant'
                related:
                    type: object
                    properties:
                        type:
                            type: string
                other_isbns:
                    type: array
                    items:
                        type: object
                        properties:
                            isbn:
                                type: string
                            binding:
                                type: string
        Author:
            type: object
            description: Describes the name of an author and the books written by that author in the database
            properties:
                author:
                    type: string
                books:
                    type: array
                    items:
                        $ref: '#/components/schemas/Book'
        Publisher:
            type: object
            properties:
                name:
                    type: string
                books:
                    type: array
                    items:
                        $ref: '#/components/schemas/Book'
        Subject:
            type: object
            properties:
                subject:
                    type: string
                books:
                    type: array
                    items:
                        $ref: '#/components/schemas/Book'
        CoverLink:
            type: string
            description: The link to the cover image
            format: uri
        CoverLinkOriginal:
            type: string
            description: 'Cover image URL in the highest available quality, valid for 2 hours after the request is executed.'
        Merchant:
            type: object
            properties:
                condition:
                    type: string
                merchant:
                    type: string
                merchant_logo:
                    type: string
                merchant_logo_offset:
                    type: object
                    properties:
                        x:
                            type: string
                        'y':
                            type: string
                shipping:
                    type: string
                price:
                    type: string
                total:
                    type: string
                link:
                    type: string
            description: Describe the conditions of the price by merchant. Only with the Pro plan
    securitySchemes:
        lambda_token:
            type: apiKey
            name: Authorization
            in: header
            x-amazon-apigateway-authtype: custom
x-original-swagger-version: '2.0'
